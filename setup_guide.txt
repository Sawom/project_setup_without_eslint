1. initial project: npm init -y

2. express install: https://expressjs.com/en/starter/installing.html
npm install express

3. mongoose install: https://mongoosejs.com/docs/
npm install mongoose --save

4. typescript install: https://www.typescriptlang.org/download
npm install typescript --save-dev

5. cors install: https://www.npmjs.com/package/cors/v/2.0.0
npm install cors

6. dotenv install: https://www.npmjs.com/package/dotenv
npm install dotenv

7. typescript er json file initialize korbo
tsc -init
initialize korar por tsconfig.json generate hobe.

8. tsconfig.json => "rootDir": "./src"  & "outDir": "./dist", 

9. erpor e src name er folder create kore app.ts nam e file open korbo.

10. https://expressjs.com/en/starter/hello-world.html docs theke hello world er code copy kore ene app.ts e paste korbo.
******************
const express = require('express')
const app = express()
const port = 3000

app.get('/', (req, res) => {
  res.send('Hello World!')
})

app.listen(port, () => {
  console.log(`Example app listening on port ${port}`)
})
******************

11. typescript k javascript e convert korbo.
 typescript k javascript e convert korar jnno package.json e likhbo script e 
"build":"tsc"

12. npm run build 
command ta dile dist folder create hobe and ts k js e convert korbe.

13. server.ts
server.ts namer ekta file create korbo zei folder app.ts ache.
***********
app.listen(port, () => {
  console.log(`Example app listening on port ${port}`)
})
***********
ei code ta app.ts theke copy kore ene server.ts e rakhbo.

14. mongoose: https://mongoosejs.com/docs/ theke
*****
const mongoose = require('mongoose');

async function main() {
  await mongoose.connect('mongodb://127.0.0.1:27017/test');
}
*****
ei code ta server.ts er sobar opore paste korbo.

15. mongodb atlas theke notun ekta user database create korbo.erpor connect korbo .env file e. id pass dibo. database => connect => driver theke 
ene .env file paste korbo. tokhn .env hobe emn.
*******
PORT=5000
DATABASE_URL=mongodb+srv://leveltwo_admin:r3HMPQBAAazWgm0g@cluster0.bsdjaxv.mongodb.net/first-project?retryWrites=true&w=majority&appName=Cluster0
*******

16. src er moddhe app namer folder create kore app er vitor config folder create kore file create korbo index.ts nam e.

17. **eta na kore direct 18 no korleo hoy.**
 process er path find kora lagbe app.ts theke. 
app.ts e last e console.log(process.cwd()) likhe run korbo,
*  npm run build
*  node .\dist\app.js
C:\Users\User\Desktop\projectSetup  => emn ashbe current directory
path pacchilo na, tai vs code * npm i --save-dev @types/node * suggest korche tai install korchilam. then error geche.

18. index.ts e uapdate korle emn hobe.
******
import dotenv from "dotenv";
import path from "path";

dotenv.config({ path: path.join((process.cwd(), ".env")) });

export default {
  port: process.env.PORT,
  database_url: process.env.DATABASE_URL,
};
******

19. server.ts update korbo config diye. emn hobe, 
*******
import config from "./app/config";

const mongoose = require('mongoose');

async function main() {
  await mongoose.connect(config.database_url);
}

app.listen(config.port, () => {
  console.log(`Example app listening on port ${config.port}`)
})
*******
app.ts e ei command dea lagbe. npm i --save-dev @types/express

20. update app.ts
*******
import express, { Application, Request, Response } from 'express';
import cors from 'cors'
const app: Application = express()
const port = 3000

// parsers
app.use(express.json())
app.use(cors())

app.get('/', (req: Request, res: Response) => {
  res.send('Hello World!')
})

export default app;
*******

21. update server.ts
*****
import app from "./app";
import config from "./app/config";
import mongoose from "mongoose";

async function main() {

    try{
        await mongoose.connect(config.database_url as string);

        app.listen(config.port, () => {
            console.log(`Example app listening on port ${config.port}`)
        })
    } catch(err){
        console.log(err);
    }

}
*****

22. ts node dev install 
npm i ts-node-dev --save-dev

**** finally run project
ts-node-dev --respawn --transpile-only src/server.ts




